{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAa5C,OACI,0BAAMC,SARS,SAACC,GAChBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAjBa,SAACP,GAEtBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DAEZC,EAFY,iDAEoCC,UAAUH,GAF9C,+DAGCI,MAAMF,GAHP,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAM,CACFC,GAAQD,EAAIC,GACZC,MAAQF,EAAIE,MACZV,IAAG,UAAKQ,EAAIG,cAAT,aAAK,EAAYC,iBAAiBZ,QAT3B,kBAYXM,GAZW,4CAAF,sDCEPO,EAAc,SAAC,GAAoB,EAAnBJ,GAAoB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAEnC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAH0B,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAd,GACFY,EAAS,CACLf,KAAKG,EACLU,SAAQ,SAGlB,CAACpB,IAEIqB,EDbwBI,CAAazB,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAGpB,OACI,oCACI,4BAAKpB,GACLoB,GAAW,uBAAGJ,UAAU,qCAAb,eACX,yBAAKA,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIgB,IAAKhB,EAAIC,IACLD,UEdnBiB,EAAe,WAAM,MAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAS9B,OACI,oCACI,+CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,4BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACI0B,IAAK1B,EACLA,SAAUA,U,MClBtC6B,IAASC,OAEP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.f5b80a6c.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState('');\n    const handleInputChange= (e)=>{\n        //console.log();\n        setInputValue(e.target.value);\n    }\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        if(inputValue.trim().length>2){\n            setCategories(cats=>[inputValue,...cats]);\n            setInputValue('');\n        }    \n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            \n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n//Para hacer requerido el paso de valores\nAddCategory.propTypes={\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs= async(category)=>{\n        \n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=IwIWWEs2IvMlGTnM4xmN7B61gjkqzlBN`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map(img=>{\n        return{\n            id:     img.id,\n            title:  img.title,\n            url:    img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n    \n}","import React from 'react'\n\nexport const GifGridItem = ({id, title,url}) => {\n    \n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const {data:images, loading} = useFetchGifs(category);\n    //console.log(loading);\n\n    return (\n        <>\n            <h3>{category}</h3>\n           {loading && <p className=\"animate__animated animate__fadeIn\">Cargando...</p>}\n            <div className=\"card-grid\">\n                {\n                    images.map(img=>(\n                        <GifGridItem \n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport{getGifs} from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data:[],\n        loading:true\n    });\n\n    useEffect(()=>{\n        getGifs(category)\n        .then(img=>{\n            setState({\n                data:img,\n                loading:false\n            })\n        })\n    },[category])\n\n    return state;\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    //const categories = ['One Punch','Samurai X','Dragon Ball']\n    const [categories, setCategories] = useState(['One Punch']);\n    /*\n    const handleAdd=()=>{\n        setCategories([...categories,'HunterXhunter']);\n        \n    }\n    */\n    return (\n        <>\n            <h2>Buscador Simple</h2>\n            <hr/>\n            <AddCategory setCategories={setCategories}/>\n            <ol>\n                {\n                    categories.map(category=>\n                        <GifGrid \n                            key={category}\n                            category={category}\n                        />\n                    )\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}